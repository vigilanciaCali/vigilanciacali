<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui" template="/WEB-INF/template.xhtml">

	<ui:define name="breadcrumb">
		<li style="color: #FFCC00; font-size: 20px;"><i
			class="fa fa-video-camera" /> Video Análisis</li>
	</ui:define>

	<ui:define name="content">
		<h:form id="frm" >
			<p:growl id="growl" life="3000" autoUpdate="true" />
			<div class="ui-g">

				<div class="ui-g-12 ui-lg-8">
					<p:messages id="msg" autoUpdate="true" closable="true" />
					<p:fieldset legend="Importar Videos" toggleable="true"
						toggleSpeed="500" collapsed="true">

						<div align="center">
							<p:fileUpload id="fileUpload"
								oncomplete="PF('statusDialog').hide();" 
								onstart="PF('statusDialog').show();"
								fileUploadListener="#{videoAnalysisView.handleFileUpload}"
								uploadLabel="Cargar" mode="advanced" dragDropSupport="true"
								auto="true" multiple="false" label="Seleccionar Video para importar"
								cancelLabel="Cancelar" invalidFileMessage="Archivo Inválido"
								allowTypes="/(\.|\/)(mp4|MP4|avi|AVI)$/" accept="video/mp4, video/avi" />
						</div>
						<!-- <ul>
							<li>Información sobre carga de videos</li>
							<li>Las caracteristicas del video deben ser: .</li>
							<li>Info adicional.</li>

						</ul> -->

					</p:fieldset>

				</div>

				<div class="ui-g-12 ui-lg-8">
					
						<div class="card no-margin">
							<h1>Reproducción</h1>

							<video id="videoPlayer" width="100%" height="100%"
								autoplay="autoplay" controls="controls">
								<source src="#{videoAnalysisView.videoUrlPlayer}"
									type="video/mp4" />
							</video>						
								
						</div>
						
						<h:outputText id="displayRange"
						value="Between #{videoAnalysisView.initTimeNumber} and #{videoAnalysisView.finalTimeNumber}" />
						
					<p:slider for="txt6,txt7" display="displayRange" 
						minValue="#{videoAnalysisView.initTimeNumber}" 
						maxValue="#{videoAnalysisView.finalTimeNumber}"
						style="width: auto" range="true" animate="true" 
						displayTemplate="Between {min} and {max}" />

					<h:inputHidden id="txt6"
						value="#{videoAnalysisView.initTimeNumber}" />
					<h:inputHidden id="txt7"
						value="#{videoAnalysisView.finalTimeNumber}" /> 

	
					
				</div>

				<div class="ui-g-12 ui-lg-4">
					<div class="card no-margin">
						<h1>Acciones</h1>

						<p:accordionPanel id="accordion">
							<p:tab title="Analizar - Eventos Anómalos">
								<h:panelGrid columns="2" cellpadding="10">
									
									<p:outputLabel value="Tiempo Inicial" />
									<p:calendar binding="#{videoAnalysisView.calInitialTime}" pattern="HH:mm:ss" timeOnly="true" placeholder="hh:mm:ss"/>
									
									<p:outputLabel value="Tiempo Final"/>
									<p:calendar binding="#{videoAnalysisView.calFinalTime}" pattern="HH:mm:ss" timeOnly="true" placeholder="hh:mm:ss"/>

									<!-- <p:outputLabel value="Tiempo Inicial" for="txtInitTime" />
									<p:inputText id="txtInitTime"
										binding="#{videoAnalysisView.txtInitTime}" maxlength="4" />

									<p:outputLabel value="Tiempo Final" for="txtFinalTime" />
									<p:inputText id="txtFinalTime"
										binding="#{videoAnalysisView.txtFinalTime}" maxlength="4" /> -->

									<p:commandButton id="btnAnalyze" value="Analizar"
										icon="ui-icon-disk"
										action="#{videoAnalysisView.action_analyze_alg_anomalous()}"
										update=":frm" />

								</h:panelGrid>
							</p:tab>

							<p:tab title="Analizar - Seguimiento de Objetos ">
								<h:panelGrid columns="2" cellpadding="10">

									<p:outputLabel value="Posición X" for="posX" />
									<p:inputText id="posX" binding="#{videoAnalysisView.posX}"
										maxlength="4" />

									<p:outputLabel value="Posición Y" for="posY" />
									<p:inputText id="posY" binding="#{videoAnalysisView.posY}"
										maxlength="4" />

									<p:outputLabel value="Posición X2" for="posX2" />
									<p:inputText id="posX2" binding="#{videoAnalysisView.posX2}"
										maxlength="4" />

									<p:outputLabel value="Posición Y2" for="posY" />
									<p:inputText id="posY2" binding="#{videoAnalysisView.posY2}"
										maxlength="4" />

									<p:commandButton id="btnAnalyzeTracker" value="Analizar"
										icon="ui-icon-disk"
										action="#{videoAnalysisView.action_analyze_alg_tracker()}"
										update=":frm" />


								</h:panelGrid>
							</p:tab>

						</p:accordionPanel>



					</div>
				</div>

				<div class="ui-g-12 ui-lg-12">
					<div id="tabla" class="card no-margin">

						<p:accordionPanel dynamic="true" cache="true">
							<p:tab title="1. VIDEOS CARGADOS">
								
								<div class="ui-g">
									<div class="ui-g-6" align="left">

										<h1>Historial de Videos Cargados</h1>

									</div>
									<div class="ui-g-6">
										<p:commandButton id="btnRefreshTemp" value="Actualizar"
											icon="ui-icon-refresh"
											action="#{videoAnalysisView.action_refresh_videoTemp()}"
											style="float:right" update=":frm" />
										
									</div>

								</div>

								<p:dataTable id="datatableVideoTemp"
									style="text-align: left; font-size: 14px;" var="video"
									value="#{videoAnalysisView.videoTempData}" paginator="true"
									rows="20" selection="#{videoAnalysisView.selectedVideoTempDTO}"
									selectionMode="single" rowKey="#{video.id}"
									rowsPerPageTemplate="20,30,40" resizableColumns="true"
									liveResize="true" reflow="true" filterDelay="1200"
									widgetVar="videoTemp"
									emptyMessage="No se encontraron registros en el sistema"
									paginatorTemplate="{CurrentPageReport} {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"
									editable="true">

									<p:ajax event="rowSelect"
										listener="#{videoAnalysisView.listener_selected_videoTemp()}"
										update="frm" oncomplete="window.scrollTo(0,100);" onsuccess="videoDuration();" />

									<p:column filterBy="#{video.id}" sortBy="#{video.id}">
										<f:facet name="header">
											<h:outputText value="id" />
										</f:facet>
										<h:outputText value="#{video.id}" />
									</p:column>

									<p:column filterBy="#{video.description}"
										sortBy="#{video.description}">
										<f:facet name="header">
											<h:outputText value="Descripción" />
										</f:facet>
										<h:outputText value="#{video.description}" />
									</p:column>

									<!-- <p:column filterBy="#{video.transferTime}"
										sortBy="#{video.transferTime}">
										<f:facet name="header">
											<h:outputText value="Transfer Time" />
										</f:facet>
										<h:outputText value="#{video.transferTime}" />
									</p:column>

									<p:column filterBy="#{video.analysisTime}"
										sortBy="#{video.analysisTime}">
										<f:facet name="header">
											<h:outputText value="Processing Time" />
										</f:facet>
										<h:outputText value="#{video.analysisTime}" />
									</p:column> -->

									<!-- <p:column filterBy="#{video.lenght}"
										sortBy="#{video.lenght}">
										<f:facet name="header">
											<h:outputText value="Tamaño Mb" />
										</f:facet>
										<h:outputText value="#{video.lenght}"/>
									</p:column> -->
									
									<p:column filterBy="#{video.createdAt}"
										sortBy="#{video.createdAt}">
										<f:facet name="header">
											<h:outputText value="Fecha Creación" />
										</f:facet>
										<h:outputText value="#{video.createdAt}" />
									</p:column>

									<p:column filterBy="#{video.createdBy}"
										sortBy="#{video.createdBy}">
										<f:facet name="header">
											<h:outputText value="Creado Por" />
										</f:facet>
										<h:outputText value="#{video.createdBy}" />
									</p:column>

									<p:column filterBy="#{video.url}" sortBy="#{video.url}">
										<f:facet name="header">
											<h:outputText value="Url" />
										</f:facet>

										<a href="javascript:abrir('#{video.url}')"> <p:commandButton
												type="button" value="Abri Video PopUp"
												styleClass="yellow-btn" style="margin-bottom:10px;" />
										</a>

									</p:column>

								</p:dataTable>
							</p:tab>

							<p:tab title="2. VIDEOS ANALIZADOS">
								<div class="ui-g">
									<div class="ui-g-6" align="left">

										<h1>Historial de Videos Analizados</h1>

									</div>
									<div class="ui-g-6">
										<p:commandButton id="btnRefresh" value="Actualizar"
											icon="ui-icon-refresh"
											action="#{videoAnalysisView.action_refresh()}"
											style="float:right" update=":frm" />
									</div>

								</div>

								<p:dataTable id="datatableVideo"
									style="text-align: left; font-size: 14px;" var="video"
									value="#{videoAnalysisView.data}" paginator="true" rows="20"
									selection="#{videoAnalysisView.selectedVideoDTO}"
									selectionMode="single" rowKey="#{video.id}"
									rowsPerPageTemplate="20,30,40" resizableColumns="true"
									liveResize="true" reflow="true" filterDelay="1200"
									widgetVar="video"
									emptyMessage="No se encontraron registros en el sistema"
									paginatorTemplate="{CurrentPageReport} {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"
									editable="true">

									<p:ajax event="rowSelect"
										listener="#{videoAnalysisView.listener_selected_entity()}"
										update=":frm" oncomplete="window.scrollTo(0,100);" />

									<p:column filterBy="#{video.id}" sortBy="#{video.id}">
										<f:facet name="header">
											<h:outputText value="id" />
										</f:facet>
										<h:outputText value="#{video.id}" />
									</p:column>

									<p:column filterBy="#{video.description}"
										sortBy="#{video.description}">
										<f:facet name="header">
											<h:outputText value="Descripción" />
										</f:facet>
										<h:outputText value="#{video.description}" />
									</p:column>

									<!-- <p:column filterBy="#{video.transferTime}"
										sortBy="#{video.transferTime}">
										<f:facet name="header">
											<h:outputText value="Transfer Time" />
										</f:facet>
										<h:outputText value="#{video.transferTime}" />
									</p:column>

									<p:column filterBy="#{video.analysisTime}"
										sortBy="#{video.analysisTime}">
										<f:facet name="header">
											<h:outputText value="Processing Time" />
										</f:facet>
										<h:outputText value="#{video.analysisTime}" />
									</p:column> -->

									<p:column filterBy="#{video.createdAt}"
										sortBy="#{video.createdAt}">
										<f:facet name="header">
											<h:outputText value="Fecha Creación" />
										</f:facet>
										<h:outputText value="#{video.createdAt}" />
									</p:column>

									<p:column filterBy="#{video.createdBy}"
										sortBy="#{video.createdBy}">
										<f:facet name="header">
											<h:outputText value="Creado Por" />
										</f:facet>
										<h:outputText value="#{video.createdBy}" />
									</p:column>

									<p:column filterBy="#{video.url}" sortBy="#{video.url}">
										<f:facet name="header">
											<h:outputText value="Url" />
										</f:facet>

										<a href="javascript:abrir('#{video.url}')"> <p:commandButton
												type="button" value="Abri Video PopUp"
												styleClass="green-btn" style="margin-bottom:10px;" />
										</a>

									</p:column>

								</p:dataTable>
							</p:tab>


						</p:accordionPanel>

					</div>

				</div>

			</div>
		</h:form>

<script type="text/javascript">
//service("null"+videoPlayer.duration);

//videoDuration();

function service(data) {
	  console.log("function service");
	  
	//var minutes = parseInt(videoPlayer.duration / 60, 10);
	//var data = videoPlayer.duration % 60;
	console.log("Data: " + data);
		
	//var data = "hola"+String(videoPlayer.duration.toString());
    var res = data.toString();
    console.log("res: " + res);
    
	  $.post("http://localhost:8080/vas/controller/alg/anomalous/",res,
		        function(res,status){
		            console.log("Data: " + res + "\nStatus: " + status);
		        });
	
} 

async function videoDuration() { 
	console.log("videoDuration");
	console.log("videoPlayer.duration: "+videoPlayer.duration);

	await sleep(1000);
	console.log("videoPlayer.duration: "+videoPlayer.duration);
	
	var minutes;
	var seconds;
	
	if(videoPlayer.readyState > 0) {
		minutes = parseInt(videoPlayer.duration / 60, 10);
		seconds = videoPlayer.duration % 60;
		
		console.log("minutes: "+minutes);
		console.log("seconds: "+seconds);

		service(seconds);
		// (Put the minutes and seconds in the display)
	}
	
    //alert(videoPlayer.duration);
   // var duration = videoPlayer.duration;
    //console.log("duration: "+duration);
    //return duration;
}

function sleep(ms) {
	  return new Promise(resolve => setTimeout(resolve, ms));
	}

</script>
	</ui:define>
</ui:composition>
